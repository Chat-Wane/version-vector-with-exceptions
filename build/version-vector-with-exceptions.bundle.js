require=function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){function VVwEEntry(e){this.e=e;this.v=0;this.x=[]}VVwEEntry.prototype.increment=function(){this.v+=1};VVwEEntry.prototype.incrementFrom=function(c){if(c<this.v){var index=this.x.indexOf(c);if(index>=0){this.x.splice(index,1)}}if(c==this.v+1){this.v+=1}if(c>this.v+1){for(var i=this.v+1;i<c;++i){this.x.push(i)}this.v=c}};function Comparator(a,b){var aEntry=a.e||a;var bEntry=b.e||b;if(aEntry<bEntry){return-1}if(aEntry>bEntry){return 1}return 0}module.exports=VVwEEntry;module.exports.Comparator=Comparator},{}],2:[function(require,module,exports){"use strict";module.exports=SortedArray;var search=require("binary-search");function SortedArray(cmp,arr){if(typeof cmp!="function")throw new TypeError("comparator must be a function");this.arr=arr||[];this.cmp=cmp}SortedArray.prototype.insert=function(element){var index=search(this.arr,element,this.cmp);if(index<0)index=~index;this.arr.splice(index,0,element)};SortedArray.prototype.indexOf=function(element){var index=search(this.arr,element,this.cmp);return index>=0?index:-1};SortedArray.prototype.remove=function(element){var index=search(this.arr,element,this.cmp);if(index<0)return false;this.arr.splice(index,1);return true}},{"binary-search":3}],3:[function(require,module,exports){module.exports=function(haystack,needle,comparator,low,high){var mid,cmp;if(low===undefined)low=0;else{low=low|0;if(low<0||low>=haystack.length)throw new RangeError("invalid lower bound")}if(high===undefined)high=haystack.length-1;else{high=high|0;if(high<low||high>=haystack.length)throw new RangeError("invalid upper bound")}while(low<=high){mid=low+(high-low>>1);cmp=+comparator(haystack[mid],needle);if(cmp<0)low=mid+1;else if(cmp>0)high=mid-1;else return mid}return~low}},{}],"version-vector-with-exceptions":[function(require,module,exports){var SortedArray=require("sorted-cmp-array");var Comparator=require("./vvweentry.js").Comparator;var VVwEEntry=require("./vvweentry.js");function VVwE(e){this.local=new VVwEEntry(e);this.vector=new SortedArray(Comparator);this.vector.insert(this.local)}VVwE.prototype.clone=function(){var cloneVVwE=new VVwE(this.local.e);for(var i=0;i<this.vector.arr.length;++i){cloneVVwE.vector.arr[i]=new VVwEEntry(this.vector.arr[i].e);cloneVVwE.vector.arr[i].v=this.vector.arr[i].v;for(var j=0;j<this.vector.arr[i].x.length;++j){cloneVVwE.vector.arr[i].x.push(this.vector.arr[i].x[j])}if(cloneVVwE.vector.arr[i].e===this.local.e){cloneVVwE.local=cloneVVwE.vector.arr[i]}}return cloneVVwE};VVwE.prototype.fromJSON=function(object){for(var i=0;i<object.vector.arr.length;++i){this.vector.arr[i]=new VVwEEntry(object.vector.arr[i].e);this.vector.arr[i].v=object.vector.arr[i].v;for(var j=0;j<object.vector.arr[i].x.length;++j){this.vector.arr[i].x.push(object.vector.arr[i].x[j])}if(object.vector.arr[i].e===object.local.e){this.local=this.vector.arr[i]}}return this};VVwE.prototype.increment=function(){this.local.increment();return{_e:this.local.e,_c:this.local.v}};VVwE.prototype.incrementFrom=function(ec){var index=this.vector.indexOf(ec._e);if(index<0){this.vector.insert(new VVwEEntry(ec._e));this.vector.arr[this.vector.indexOf(ec._e)].incrementFrom(ec._c)}else{this.vector.arr[index].incrementFrom(ec._c)}};VVwE.prototype.isReady=function(ec){var ready=!ec;if(!ready){var index=this.vector.indexOf(ec._e);ready=index>=0&&ec._c<=this.vector.arr[index].v&&this.vector.arr[index].x.indexOf(ec._c)<0}return ready};VVwE.prototype.isLower=function(ec){return ec&&this.isReady(ec)};VVwE.prototype.merge=function(other){for(var i=0;i<other.vector.arr.length;++i){var entry=other.vector.arr[i];var index=this.vector.indexOf(entry);if(index<0){var newEntry=new VVwEEntry(entry.e);newEntry.v=entry.v;for(var j=0;j<entry.x.length;++j){newEntry.x.push(entry.x[j])}this.vector.insert(newEntry)}else{var currEntry=this.vector.arr[i];var j=0;while(j<currEntry.x.length){if(currEntry.x[j]<entry.v&&entry.x.indexOf(currEntry.x[j])<0){currEntry.x.splice(j,1)}else{++j}}j=0;while(j<entry.x.length){if(entry.x[j]>currEntry.v&&currEntry.x.indexOf(entry.x[j])<0){currEntry.x.push(entry.x[j])}++j}currEntry.v=Math.max(currEntry.v,entry.v)}}};module.exports=VVwE},{"./vvweentry.js":1,"sorted-cmp-array":2}]},{},[]);